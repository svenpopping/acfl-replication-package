#!/usr/bin/env bash
set -e

# ------------------------------------------------------------------------------
# Intro
# ------------------------------------------------------------------------------
cat <<"EOF"
   _____ ______     _ _               _____                             
  / ____|___  /    | | |             |  __ \                            
 | |  __   / / ___ | | |_ __ _ _ __  | |__) |   _ _ __  _ __   ___ _ __ 
 | | |_ | / / / _ \| | __/ _` | '__| |  _  / | | | '_ \| '_ \ / _ \ '__|
 | |__| |/ /_| (_) | | || (_| | |    | | \ \ |_| | | | | | | |  __/ |   
  \_____/_____\___/|_|\__\__,_|_|    |_|  \_\__,_|_| |_|_| |_|\___|_|   
                                                                        
                                                                        
EOF

# ------------------------------------------------------------------------------
# Default folders
# ------------------------------------------------------------------------------
DIR_SCRIPT=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
DIR_RESULTS=$(realpath ${DIR_SCRIPT}/results)

# ------------------------------------------------------------------------------
# Helper function
# ------------------------------------------------------------------------------
function header() {
  echo ''
  echo "##################################################################################"
  echo -e "#                                                                                #\r# $1"
  echo "##################################################################################"
}

function message() {
  echo -e "........................................................................... $1\r$2" >&2
}

function die() {
  message "ERROR" "$@" >&2
  exit 1
}

# ------------------------------------------------------------------------------
# Check usage
# ------------------------------------------------------------------------------
USAGE='Environment variables PROJECT_ID, BUG_ID are required!'

[[ "${PROJECT_ID}" != "" ]] || die "${USAGE}"
[[ "${BUG_ID}" != "" ]] || die "${USAGE}"

# ------------------------------------------------------------------------------
# Before cleanup
# ------------------------------------------------------------------------------
rm -rf ${DIR_RESULTS}/sfl/txt/*

# ------------------------------------------------------------------------------
# Checkout the application
# ------------------------------------------------------------------------------
${DIR_SCRIPT}/scripts/defects4j-checkout.sh ${PROJECT_ID} ${BUG_ID}
mkdir -p ${DIR_RESULTS}

# ------------------------------------------------------------------------------
# Run GZoltar
# ------------------------------------------------------------------------------
${DIR_SCRIPT}/scripts/list-passing-test-cases.sh
${DIR_SCRIPT}/scripts/list-failing-test-cases.sh

${DIR_SCRIPT}/scripts/gzoltar-instrumentation.sh
${DIR_SCRIPT}/scripts/gzoltar-check.sh

header "Generate fault localization report"
for FORMULA in ochiai dstar tarantula barinel; do
    ${DIR_SCRIPT}/scripts/gzoltar-sfl.sh ${FORMULA}
done

# ------------------------------------------------------------------------------
# After cleanup
# ------------------------------------------------------------------------------
${DIR_SCRIPT}/scripts/classes-cleanup.sh
