name;suspiciousness_value;ranking
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):67;2.44140625E-4;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):74;2.44140625E-4;1
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):86;2.44140625E-4;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):77;2.5089018975452307E-6;2
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):62;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):63;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):64;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):65;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):66;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):69;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):70;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):71;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):62;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):63;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):64;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):65;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):67;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):68;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):69;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):71;1.0058283805847168E-7;3
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):45;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):46;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):47;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):48;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):55;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):56;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#getPoints():63;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$Cluster#getCenter():71;8.38860799999998E-9;4
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1624;8.38860799999998E-9;4
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1625;8.38860799999998E-9;4
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1626;8.38860799999998E-9;4
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1627;8.38860799999998E-9;4
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1629;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):40;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):41;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):42;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):56;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):57;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):60;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):61;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):89;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):90;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):91;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):92;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):93;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):107;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):108;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):111;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):112;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):114;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):115;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):139;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):153;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):154;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):155;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):156;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):157;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):158;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):159;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):161;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):162;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):43;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):44;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):45;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#getPoint():52;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):57;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):77;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):80;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):81;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):84;8.38860799999998E-9;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):85;8.38860799999998E-9;4
