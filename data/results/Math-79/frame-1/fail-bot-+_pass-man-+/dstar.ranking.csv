name;suspiciousness_value;ranking
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):40;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):41;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):42;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):56;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):57;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):60;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):61;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):62;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):63;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):64;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):65;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):66;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):67;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):69;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):70;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):71;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):74;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):89;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):90;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):91;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):92;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):93;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):107;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):108;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):111;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):112;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):114;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):115;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):139;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):153;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):154;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):155;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):156;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):157;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):158;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):159;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):161;49.0;1
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):162;49.0;1
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):86;49.0;1
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):45;49.0;1
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):46;49.0;1
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):47;49.0;1
org.apache.commons.math.stat.clustering$Cluster#Cluster(org.apache.commons.math.stat.clustering.Clusterable):48;49.0;1
org.apache.commons.math.stat.clustering$Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):55;49.0;1
org.apache.commons.math.stat.clustering$Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):56;49.0;1
org.apache.commons.math.stat.clustering$Cluster#getPoints():63;49.0;1
org.apache.commons.math.stat.clustering$Cluster#getCenter():71;49.0;1
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):57;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):62;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):63;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):64;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):65;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):67;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):68;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):69;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#centroidOf(java.util.Collection):71;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):77;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):80;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):81;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):84;24.5;2
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#equals(java.lang.Object):85;24.5;2
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1624;16.333333333333332;3
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1625;16.333333333333332;3
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1626;16.333333333333332;3
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1627;16.333333333333332;3
org.apache.commons.math.util$MathUtils#distance(int[],int[]):1629;16.333333333333332;3
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):43;9.8;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):44;9.8;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#EuclideanIntegerPoint(int[]):45;9.8;4
org.apache.commons.math.stat.clustering$EuclideanIntegerPoint#getPoint():52;9.8;4
