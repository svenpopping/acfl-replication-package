/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Feb 24 16:44:41 GMT 2020
 */
package org.apache.commons.math.estimation;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AbstractEstimator_ESTest_scaffolding_EvoSuite {
  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 
  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 
  @Before 
  public void initTestCase(){ 
    setSystemProperties(); 
  } 
  @After 
  public void doneWithTestCase(){ 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
  } 
  public static void setSystemProperties() {
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
  }
  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractEstimator_ESTest_scaffolding_EvoSuite.class.getClassLoader() ,
      "org.apache.commons.math.estimation.EstimatedParameter",
      "org.apache.commons.math.linear.MatrixIndexException",
      "org.apache.commons.math.estimation.EstimationException",
      "org.apache.commons.math.estimation.WeightedMeasurement",
      "org.apache.commons.math.estimation.SimpleEstimationProblem",
      "org.apache.commons.math.linear.RealMatrixImpl",
      "org.apache.commons.math.MathException",
      "org.apache.commons.math.linear.BigMatrix",
      "org.apache.commons.math.estimation.Estimator",
      "org.apache.commons.math.estimation.LevenbergMarquardtEstimator",
      "org.apache.commons.math.linear.MatrixUtils",
      "org.apache.commons.math.estimation.AbstractEstimator",
      "org.apache.commons.math.linear.InvalidMatrixException",
      "org.apache.commons.math.linear.RealMatrix",
      "org.apache.commons.math.estimation.GaussNewtonEstimator",
      "org.apache.commons.math.estimation.EstimationProblem"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.commons.math.estimation.WeightedMeasurement", false, AbstractEstimator_ESTest_scaffolding_EvoSuite.class.getClassLoader()));
  }
  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractEstimator_ESTest_scaffolding_EvoSuite.class.getClassLoader()); 
    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.math.estimation.AbstractEstimator",
      "org.apache.commons.math.estimation.GaussNewtonEstimator",
      "org.apache.commons.math.estimation.SimpleEstimationProblem",
      "org.apache.commons.math.MathException",
      "org.apache.commons.math.estimation.EstimationException",
      "org.apache.commons.math.estimation.LevenbergMarquardtEstimator",
      "org.apache.commons.math.estimation.EstimatedParameter",
      "org.apache.commons.math.linear.RealMatrixImpl",
      "org.apache.commons.math.linear.MatrixUtils",
      "org.apache.commons.math.linear.InvalidMatrixException",
      "org.apache.commons.math.estimation.WeightedMeasurement"
    );
  }
}
