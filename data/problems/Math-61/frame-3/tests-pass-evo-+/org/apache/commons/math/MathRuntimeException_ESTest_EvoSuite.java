/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:39:05 GMT 2020
 */

package org.apache.commons.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.text.ParseException;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.NoSuchElementException;
import org.apache.commons.math.MathRuntimeException;
import org.apache.commons.math.exception.util.Localizable;
import org.apache.commons.math.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;

public class MathRuntimeException_ESTest_EvoSuite extends MathRuntimeException_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.ZERO_DENOMINATOR;
      Object[] objectArray0 = new Object[2];
      EOFException eOFException0 = MathRuntimeException.createEOFException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(eOFException0);
      MockFile mockFile0 = new MockFile("[uCmQ3XK");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mathRuntimeException0.printStackTrace((PrintStream) mockPrintStream0);
      assertEquals("{0}", mathRuntimeException0.getPattern());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParseException parseException0 = MathRuntimeException.createParseException((-1146), "", (Object[]) null);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(parseException0, (String) null, (Object[]) null);
      String string0 = mathRuntimeException0.getPattern();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.DIMENSIONS_MISMATCH;
      Object[] objectArray0 = new Object[24];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(localizedFormats0, objectArray0);
      String string0 = mathRuntimeException0.getPattern();
      assertEquals("dimensions mismatch", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(mockThrowable0, "", (Object[]) null);
      String string0 = mathRuntimeException0.getPattern();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE;
      Object[] objectArray0 = new Object[4];
      NoSuchElementException noSuchElementException0 = MathRuntimeException.createNoSuchElementException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(noSuchElementException0);
      String string0 = mathRuntimeException0.getMessage();
      assertEquals("column index null out of allowed range [null, null]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException("", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(arrayIndexOutOfBoundsException0);
      String string0 = mathRuntimeException0.getLocalizedMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      Localizable localizable0 = mathRuntimeException0.getLocalizablePattern();
      assertNull(localizable0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException("", (Object[]) null);
      Object[] objectArray0 = mathRuntimeException0.getArguments();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      Locale locale0 = Locale.FRENCH;
      String string0 = mathRuntimeException0.getMessage(locale0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NullPointerException nullPointerException0 = MathRuntimeException.createNullPointerException("1^@", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(nullPointerException0, "1^@", objectArray0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = mathRuntimeException0.getMessage(locale0);
      assertEquals("1^@", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.LENGTH;
      Object[] objectArray0 = new Object[7];
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(arrayIndexOutOfBoundsException0, localizedFormats0, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NUMBER_OF_POINTS;
      ParseException parseException0 = MathRuntimeException.createParseException(707, (Localizable) localizedFormats0, (Object[]) null);
      assertNotNull(parseException0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM;
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(localizedFormats0, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      LocalizedFormats localizedFormats0 = LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE;
      NullPointerException nullPointerException0 = MathRuntimeException.createNullPointerException((Localizable) localizedFormats0, objectArray0);
      RuntimeException runtimeException0 = MathRuntimeException.createInternalError(nullPointerException0);
      IOException iOException0 = MathRuntimeException.createIOException(runtimeException0);
      assertNotNull(iOException0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException((String) null, objectArray0);
      RuntimeException runtimeException0 = MathRuntimeException.createInternalError(arrayIndexOutOfBoundsException0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(runtimeException0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ParseException parseException0 = MathRuntimeException.createParseException((-215), "", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(parseException0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.EVALUATIONS;
      Object[] objectArray0 = new Object[1];
      NullPointerException nullPointerException0 = MathRuntimeException.createNullPointerException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(nullPointerException0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING;
      Object[] objectArray0 = new Object[4];
      UnsupportedOperationException unsupportedOperationException0 = MathRuntimeException.createUnsupportedOperationException(localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(unsupportedOperationException0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      NoSuchElementException noSuchElementException0 = MathRuntimeException.createNoSuchElementException("", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(noSuchElementException0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM;
      Object[] objectArray0 = new Object[0];
      ConcurrentModificationException concurrentModificationException0 = MathRuntimeException.createConcurrentModificationException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(concurrentModificationException0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IllegalStateException illegalStateException0 = MathRuntimeException.createIllegalStateException("Y+&N!^I=r/Ms", (Object[]) null);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(illegalStateException0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.DIMENSIONS_MISMATCH;
      Object[] objectArray0 = new Object[24];
      IllegalArgumentException illegalArgumentException0 = MathRuntimeException.createIllegalArgumentException((Localizable) localizedFormats0, objectArray0);
      IOException iOException0 = MathRuntimeException.createIOException(illegalArgumentException0);
      assertNotNull(iOException0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      LocalizedFormats localizedFormats0 = LocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS;
      ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException0 = MathRuntimeException.createArrayIndexOutOfBoundsException((Localizable) localizedFormats0, objectArray0);
      IOException iOException0 = MathRuntimeException.createIOException(arrayIndexOutOfBoundsException0);
      assertNotNull(iOException0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NullPointerException nullPointerException0 = MathRuntimeException.createNullPointerException("1^@", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(nullPointerException0, "1^@", objectArray0);
      String string0 = mathRuntimeException0.getLocalizedMessage();
      assertEquals("1^@", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      mathRuntimeException0.printStackTrace();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException((Localizable) null, objectArray0);
      String string0 = mathRuntimeException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.EVALUATIONS;
      Object[] objectArray0 = new Object[2];
      ConcurrentModificationException concurrentModificationException0 = MathRuntimeException.createConcurrentModificationException((Localizable) localizedFormats0, objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(concurrentModificationException0, localizedFormats0, objectArray0);
      Localizable localizable0 = mathRuntimeException0.getLocalizablePattern();
      assertSame(localizable0, localizedFormats0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      IllegalStateException illegalStateException0 = MathRuntimeException.createIllegalStateException((Localizable) null, objectArray0);
      assertNotNull(illegalStateException0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      LocalizedFormats localizedFormats0 = LocalizedFormats.INTERNAL_ERROR;
      UnsupportedOperationException unsupportedOperationException0 = MathRuntimeException.createUnsupportedOperationException(localizedFormats0, objectArray0);
      IllegalArgumentException illegalArgumentException0 = MathRuntimeException.createIllegalArgumentException((Throwable) unsupportedOperationException0);
      assertNotNull(illegalArgumentException0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NullPointerException nullPointerException0 = MathRuntimeException.createNullPointerException("1^@", objectArray0);
      MathRuntimeException mathRuntimeException0 = new MathRuntimeException(nullPointerException0, "1^@", objectArray0);
      Object[] objectArray1 = mathRuntimeException0.getArguments();
      assertNotSame(objectArray0, objectArray1);
  }
}
