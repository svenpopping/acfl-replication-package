/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:41:01 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Exp;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Log10;
import org.apache.commons.math.analysis.function.Log1p;
import org.apache.commons.math.analysis.function.Logistic;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

public class BaseSecantSolver_ESTest_EvoSuite extends BaseSecantSolver_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Log10 log10_0 = new Log10();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      pegasusSolver0.solve(552, (UnivariateRealFunction) log10_0, 1.0E-6, 7.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-912.41249));
      Log1p log1p0 = new Log1p();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      illinoisSolver0.solve(5, (UnivariateRealFunction) log1p0, 0.0, (-912.41249), (-1851.2019008434), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2579.392684173), (-2579.392684173));
      Exp exp0 = new Exp();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      regulaFalsiSolver0.solve(1997, (UnivariateRealFunction) exp0, (-3731.111), (double) 1997, 0.5, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
      Identity identity0 = new Identity();
      illinoisSolver0.solve(2906, (UnivariateRealFunction) identity0, (double) 2906, 0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-491.868));
      Asinh asinh0 = new Asinh();
      illinoisSolver0.solve(2489, (UnivariateRealFunction) asinh0, (-491.868), (double) 2489, (-1.0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0, 4830.8944734576);
      Logistic logistic0 = new Logistic(0.0, 0.0, 1405, 0.0, 0.5, 1405);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      regulaFalsiSolver0.solve(1405, (UnivariateRealFunction) logistic0, 0.0, 0.5, allowedSolution0);
      regulaFalsiSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0, 0.0);
      Logistic logistic0 = new Logistic(0.0, 0.0, 1.0E-6, 203.1807796086, 0.0, 1.0E-6);
      illinoisSolver0.solve(4004, (UnivariateRealFunction) logistic0, (double) 4004, (double) 4004, 4.503599627370496E15);
      illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-4141.2449266163));
      Exp exp0 = new Exp();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      illinoisSolver0.solve(4382, (UnivariateRealFunction) exp0, (-4141.2449266163), (double) 4382, allowedSolution0);
      illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(5.189702948993311E-5, 5.189702948993311E-5);
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3600.7952), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-2579.392684173), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      regulaFalsiSolver0.solve(3632, (UnivariateRealFunction) asinh0, (-2598.492482035586), (double) 3632, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3600.7952), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(5.189702948993311E-5, 5.189702948993311E-5);
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3600.79515260995), 2441.522474248466, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      regulaFalsiSolver0.solve(3632, (UnivariateRealFunction) asinh0, (-2597.1141153029944), (double) 3632, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2579.392684173));
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3598.7), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2577.839596367066), (-2577.839596367066));
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3598.7), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2579.392684173), (-2579.392684173));
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3598.7), 2466.397236433028, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2579.392684173), (-2579.392684173));
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(3635, (UnivariateRealFunction) asinh0, (-3598.7), 2466.2898427969135, allowedSolution0);
      assertEquals((-566.2050786015434), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-1.4051486141155487E-16), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(7.0, 7.0, 7.0);
      Log10 log10_0 = new Log10();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(587, (UnivariateRealFunction) log10_0, 0.8673943787955573, 7.0, allowedSolution0);
      assertEquals(3.9336971893977783, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0.8673943787955573, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), 1677.1965);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1677.1965, 0.003, 4210.745836);
      double double0 = illinoisSolver0.solve(2562, (UnivariateRealFunction) harmonicOscillator0, (-882.09142430965), (-104.49592225));
      assertEquals((-493.29367327982504), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-822.3449809858104), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(3209.413356753147);
      Sigmoid sigmoid0 = new Sigmoid();
      UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = pegasusSolver0.solve(128, univariateRealFunction0, (-232.341511072), 2948.5271476419107, 2948.5271476419107, allowedSolution0);
      assertEquals(2948.5271476419107, pegasusSolver0.getMax(), 0.01);
      assertEquals(2948.5271476419107, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2279.0862151578585, 7.0);
      Log10 log10_0 = new Log10();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(587, (UnivariateRealFunction) log10_0, 0.7558546382420083, 2279.0862151578585, allowedSolution0);
      assertEquals(1139.9210348980503, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(80.35691319068519, double0, 0.01);
  }

}
