/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:44:03 GMT 2020
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.math.analysis.MultivariateRealFunction;
import org.apache.commons.math.analysis.MultivariateVectorialFunction;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.LeastSquaresConverter;
import org.apache.commons.math.optimization.RealConvergenceChecker;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.SimpleRealPointChecker;
import org.apache.commons.math.optimization.SimpleScalarValueChecker;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.apache.commons.math.optimization.direct.NelderMead;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class DirectSearchOptimizer_ESTest_EvoSuite extends DirectSearchOptimizer_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead();
      nelderMead0.getEvaluations();
      nelderMead0.setMaxIterations(3466);
      nelderMead0.incrementIterationsCounter();
      NelderMead nelderMead1 = new NelderMead(3466, 0.0, 2200.86572371549, 3466);
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[1];
      double[] doubleArray0 = new double[0];
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, 3466);
      realPointValuePairArray0[0] = realPointValuePair0;
      nelderMead1.simplex = realPointValuePairArray0;
      RealConvergenceChecker realConvergenceChecker0 = nelderMead1.getConvergenceChecker();
      nelderMead1.setConvergenceChecker(realConvergenceChecker0);
      nelderMead0.setConvergenceChecker(realConvergenceChecker0);
      Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      nelderMead1.evaluateSimplex(comparator0);
      nelderMead1.setMaxIterations(677);
      nelderMead0.getIterations();
      SimpleRealPointChecker simpleRealPointChecker0 = new SimpleRealPointChecker();
      nelderMead0.setConvergenceChecker(simpleRealPointChecker0);
      MultiDirectional multiDirectional0 = new MultiDirectional();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead();
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[1];
      double[] doubleArray0 = new double[0];
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, (-1.0));
      realPointValuePairArray0[0] = realPointValuePair0;
      nelderMead0.simplex = realPointValuePairArray0;
      nelderMead0.incrementIterationsCounter();
      Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      nelderMead0.evaluateSimplex(comparator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead(1114.871, 1114.871, 1114.871, 1.0);
      SimpleScalarValueChecker simpleScalarValueChecker0 = new SimpleScalarValueChecker();
      nelderMead0.setConvergenceChecker(simpleScalarValueChecker0);
      nelderMead0.getIterations();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead(180.0, 2291.667, 180.0, 729.7);
      nelderMead0.setMaxIterations((-2651));
      nelderMead0.setMaxIterations((-2607));
      nelderMead0.setMaxEvaluations(475);
      nelderMead0.getEvaluations();
      nelderMead0.getMaxIterations();
      nelderMead0.getConvergenceChecker();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead();
      SimpleScalarValueChecker simpleScalarValueChecker0 = new SimpleScalarValueChecker(0.0, 0.0);
      nelderMead0.setConvergenceChecker(simpleScalarValueChecker0);
      double[] doubleArray0 = new double[0];
      nelderMead0.setStartConfiguration(doubleArray0);
      nelderMead0.getMaxEvaluations();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead((-2125.17396895176), 0.0, 3328.832394951789, (-1555.96454977213));
      nelderMead0.setMaxIterations(1469);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional();
      multiDirectional0.getConvergenceChecker();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead();
      nelderMead0.getMaxIterations();
      nelderMead0.setMaxEvaluations(0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional(0.0, (-3454.84469997357));
      multiDirectional0.incrementIterationsCounter();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional();
      multiDirectional0.incrementIterationsCounter();
      multiDirectional0.getEvaluations();
      multiDirectional0.getConvergenceChecker();
      multiDirectional0.getMaxIterations();
  }

}
