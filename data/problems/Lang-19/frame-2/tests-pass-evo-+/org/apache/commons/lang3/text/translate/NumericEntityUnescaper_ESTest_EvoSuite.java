/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:22:39 GMT 2020
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

public class NumericEntityUnescaper_ESTest_EvoSuite extends NumericEntityUnescaper_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('&');
      stringWriter0.write(35);
      stringWriter0.write("V/%aiU^&h");
      stringWriter0.append(';');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      String string0 = numericEntityUnescaper0.translate((CharSequence) stringBuffer0);
      assertEquals("&#V/%aiU^&h;", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      int int0 = numericEntityUnescaper0.translate((CharSequence) "&&&&&&&&", 2, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter(0);
      int int0 = numericEntityUnescaper0.translate((CharSequence) "0", 0, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      int int0 = numericEntityUnescaper0.translate((CharSequence) "&&&T&&&&", 7, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('&');
      char[] charArray0 = new char[7];
      stringWriter1.write(charArray0);
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      String string0 = numericEntityUnescaper0.translate((CharSequence) stringBuffer0);
      assertEquals("&\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }
}
