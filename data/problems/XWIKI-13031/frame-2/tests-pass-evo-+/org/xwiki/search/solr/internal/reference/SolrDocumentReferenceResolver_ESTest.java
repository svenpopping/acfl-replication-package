/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 16 14:25:32 GMT 2020
 */

package org.xwiki.search.solr.internal.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.solr.common.SolrDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.reference.EntityReference;
import org.xwiki.model.reference.EntityReferenceResolver;
import org.xwiki.search.solr.internal.reference.SolrDocumentReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SolrDocumentReferenceResolver_ESTest extends SolrDocumentReferenceResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SolrDocumentReferenceResolver solrDocumentReferenceResolver0 = new SolrDocumentReferenceResolver();
      EntityReferenceResolver<Integer> entityReferenceResolver0 = (EntityReferenceResolver<Integer>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn((EntityReference) null).when(entityReferenceResolver0).resolve(anyInt() , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrDocumentReferenceResolver0, (Class<?>) SolrDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrDocumentReferenceResolver0, (Class<?>) SolrDocumentReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        solrDocumentReferenceResolver0.resolve(solrDocument0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xwiki.model.reference.EntityReference", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SolrDocumentReferenceResolver solrDocumentReferenceResolver0 = new SolrDocumentReferenceResolver();
      EntityReference entityReference0 = mock(EntityReference.class, new ViolatedAssumptionAnswer());
      EntityReferenceResolver<Object> entityReferenceResolver0 = (EntityReferenceResolver<Object>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0).when(entityReferenceResolver0).resolve(any() , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrDocumentReferenceResolver0, (Class<?>) SolrDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrDocumentReferenceResolver0, (Class<?>) SolrDocumentReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      // Undeclared exception!
      try { 
        solrDocumentReferenceResolver0.resolve(solrDocument0, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // An Entity Reference name cannot be null or empty
         //
         verifyException("org.xwiki.model.reference.EntityReference", e);
      }
  }
}
