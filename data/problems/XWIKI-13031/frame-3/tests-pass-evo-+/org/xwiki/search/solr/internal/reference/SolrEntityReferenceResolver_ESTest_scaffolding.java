/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 16 14:26:55 GMT 2020
 */

package org.xwiki.search.solr.internal.reference;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class SolrEntityReferenceResolver_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/st4pop/Development/Experiments/docker-evosuite"); 
    java.lang.System.setProperty("user.home", "/home/st4pop"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "st4pop"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SolrEntityReferenceResolver_ESTest_scaffolding.class.getClassLoader() ,
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceSerializer",
      "org.xwiki.component.annotation.Component",
      "org.apache.solr.common.SolrDocument$2",
      "org.xwiki.model.reference.EntityReference",
      "org.apache.solr.common.SolrDocument$1",
      "org.xwiki.text.StringUtils",
      "org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver",
      "org.xwiki.model.reference.SpaceReference",
      "org.apache.commons.lang3.StringUtils",
      "org.xwiki.model.internal.reference.AbstractReferenceEntityReferenceResolver",
      "org.xwiki.model.internal.reference.ExplicitReferenceEntityReferenceResolver",
      "org.xwiki.component.annotation.Role",
      "org.apache.solr.common.SolrException",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver",
      "org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver$1",
      "org.xwiki.model.reference.LocalDocumentReference",
      "org.xwiki.model.internal.reference.RelativeStringEntityReferenceResolver",
      "org.apache.commons.lang3.builder.HashCodeBuilder",
      "org.xwiki.model.EntityType",
      "org.xwiki.model.reference.EntityReferenceSerializer",
      "org.xwiki.model.reference.InvalidEntityReferenceException",
      "org.apache.commons.lang.LocaleUtils",
      "org.xwiki.model.internal.reference.LocalizedStringEntityReferenceSerializer",
      "org.xwiki.model.reference.EntityReferenceProvider",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$3",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$4",
      "org.xwiki.model.internal.reference.StringReferenceSeparators",
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceResolver",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$1",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$2",
      "org.apache.solr.common.util.NamedList",
      "org.xwiki.model.internal.reference.AbstractReferenceEntityReferenceResolver$1",
      "org.xwiki.model.reference.EntityReferenceResolver",
      "org.apache.solr.common.SolrDocument",
      "org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceSerializer",
      "org.xwiki.component.util.DefaultParameterizedType",
      "org.apache.commons.lang3.Validate",
      "org.xwiki.model.reference.DocumentReference",
      "org.apache.commons.lang3.builder.Builder",
      "org.xwiki.model.internal.reference.AbstractEntityReferenceResolver",
      "org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver",
      "org.xwiki.model.reference.WikiReference"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.util.function.BiFunction", false, SolrEntityReferenceResolver_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.model.reference.EntityReferenceProvider", false, SolrEntityReferenceResolver_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.model.reference.EntityReferenceResolver", false, SolrEntityReferenceResolver_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SolrEntityReferenceResolver_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.xwiki.component.util.DefaultParameterizedType",
      "org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver",
      "org.xwiki.model.reference.EntityReferenceResolver",
      "org.xwiki.model.EntityType",
      "org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver$1",
      "org.apache.solr.common.SolrDocument",
      "org.xwiki.model.internal.reference.AbstractEntityReferenceResolver",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$1",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$2",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$3",
      "org.xwiki.model.internal.reference.StringReferenceSeparators$4",
      "org.xwiki.model.internal.reference.StringReferenceSeparators",
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceResolver",
      "org.xwiki.model.internal.reference.RelativeStringEntityReferenceResolver",
      "org.apache.commons.lang3.StringUtils",
      "org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver",
      "org.xwiki.model.internal.reference.AbstractReferenceEntityReferenceResolver",
      "org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver",
      "org.xwiki.model.internal.reference.AbstractReferenceEntityReferenceResolver$1",
      "org.xwiki.model.internal.reference.ExplicitReferenceEntityReferenceResolver",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver",
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceSerializer",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceSerializer",
      "org.xwiki.model.internal.reference.LocalizedStringEntityReferenceSerializer",
      "org.xwiki.model.reference.EntityReference",
      "org.apache.solr.common.SolrDocument$2",
      "org.apache.solr.common.SolrDocument$1",
      "org.xwiki.text.StringUtils",
      "org.xwiki.model.reference.InvalidEntityReferenceException",
      "org.apache.commons.lang3.builder.HashCodeBuilder",
      "org.apache.commons.lang3.Validate",
      "org.xwiki.model.reference.DocumentReference",
      "org.apache.commons.lang.LocaleUtils"
    );
  }
}
