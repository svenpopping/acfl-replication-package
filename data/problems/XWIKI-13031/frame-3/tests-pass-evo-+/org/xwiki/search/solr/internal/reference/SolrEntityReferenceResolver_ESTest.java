/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 16 14:26:55 GMT 2020
 */

package org.xwiki.search.solr.internal.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.BiFunction;
import org.apache.solr.common.SolrDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.EntityType;
import org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver;
import org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver;
import org.xwiki.model.reference.EntityReference;
import org.xwiki.model.reference.EntityReferenceProvider;
import org.xwiki.model.reference.EntityReferenceResolver;
import org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SolrEntityReferenceResolver_ESTest extends SolrEntityReferenceResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.OBJECT;
      EntityReference entityReference0 = new EntityReference("5d0&JQ!m?so}N/F", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      Object object0 = solrDocument0.put("type", (Object) "5d0&JQ!m?so}N/F");
      solrDocument0.put("5d0&JQ!m?so}N/F", object0);
      solrDocument0.addField("spaces", solrDocument0);
      // Undeclared exception!
      try { 
        solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.xwiki.model.EntityType.5d0&JQ!m?so}N/F
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.OBJECT;
      EntityReference entityReference0 = new EntityReference("5d0&JQ!m?so}N/F", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      solrDocument0.put((String) null, (Object) solrDocument0);
      solrDocument0.addField("spaces", solrDocument0);
      // Undeclared exception!
      try { 
        solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityReferenceResolver<DefaultStringEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultStringEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      EntityType entityType0 = EntityType.CLASS_PROPERTY;
      DefaultReferenceEntityReferenceResolver defaultReferenceEntityReferenceResolver0 = new DefaultReferenceEntityReferenceResolver();
      EntityReferenceProvider entityReferenceProvider0 = mock(EntityReferenceProvider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultReferenceEntityReferenceResolver0, (Class<?>) DefaultReferenceEntityReferenceResolver.class, "provider", (Object) entityReferenceProvider0);
      Injector.validateBean(defaultReferenceEntityReferenceResolver0, (Class<?>) DefaultReferenceEntityReferenceResolver.class);
      solrDocument0.put("wiki", (Object) defaultReferenceEntityReferenceResolver0);
      // Undeclared exception!
      try { 
        solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver cannot be cast to java.lang.String
         //
         verifyException("org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.OBJECT;
      EntityReference entityReference0 = new EntityReference("5d0&JQ!m?so}N/F", entityType0, (EntityReference) null);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0, (EntityReference) null).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      solrDocument0.setField("name", "5d0&JQ!m?so}N/F");
      EntityReference entityReference1 = solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
      assertNull(entityReference1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.OBJECT;
      EntityReference entityReference0 = new EntityReference("5d0&JQ!m?so}N/F", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0, (EntityReference) null).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      solrDocument0.addField("spaces", solrDocument0);
      // Undeclared exception!
      try { 
        solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xwiki.search.solr.internal.reference.SolrEntityReferenceResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.WIKI;
      EntityReference entityReference0 = new EntityReference("eto@~s%", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      DefaultStringEntityReferenceResolver defaultStringEntityReferenceResolver0 = new DefaultStringEntityReferenceResolver();
      EntityReferenceProvider entityReferenceProvider0 = mock(EntityReferenceProvider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultStringEntityReferenceResolver0, (Class<?>) DefaultStringEntityReferenceResolver.class, "provider", (Object) entityReferenceProvider0);
      Injector.validateBean(defaultStringEntityReferenceResolver0, (Class<?>) DefaultStringEntityReferenceResolver.class);
      BiFunction<Object, Object, ExplicitStringEntityReferenceResolver> biFunction0 = (BiFunction<Object, Object, ExplicitStringEntityReferenceResolver>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      solrDocument0.merge("spaces", defaultStringEntityReferenceResolver0, biFunction0);
      EntityReference entityReference1 = solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
      assertNull(entityReference1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.WIKI;
      EntityReference entityReference0 = new EntityReference("eto@~s%", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      solrDocument0.put("wiki", (Object) "eto@~s%");
      EntityReference entityReference1 = solrEntityReferenceResolver0.resolve(solrDocument0, entityType0, (Object[]) null);
      assertNull(entityReference1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.CLASS_PROPERTY;
      EntityReference entityReference0 = new EntityReference("#_JjL2kPt.=\"HF$T", entityType0);
      EntityReferenceResolver<DefaultStringEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultStringEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0, entityReference0, entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      EntityType entityType1 = EntityType.OBJECT_PROPERTY;
      EntityReference entityReference1 = solrEntityReferenceResolver0.resolve(solrDocument0, entityType1, (Object[]) null);
      assertNull(entityReference1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SolrEntityReferenceResolver solrEntityReferenceResolver0 = new SolrEntityReferenceResolver();
      EntityType entityType0 = EntityType.DOCUMENT;
      EntityReference entityReference0 = new EntityReference("LIT7aN!`T6(Bib*7kj", entityType0);
      EntityReferenceResolver<DefaultReferenceEntityReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceEntityReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      doReturn(entityReference0, entityReference0, entityReference0, entityReference0, entityReference0).when(entityReferenceResolver0).resolve(any(org.xwiki.model.internal.reference.DefaultReferenceEntityReferenceResolver.class) , any(org.xwiki.model.EntityType.class) , any(java.lang.Object[].class));
      Injector.inject(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class, "explicitReferenceEntityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(solrEntityReferenceResolver0, (Class<?>) SolrEntityReferenceResolver.class);
      SolrDocument solrDocument0 = new SolrDocument();
      EntityType entityType1 = EntityType.ATTACHMENT;
      EntityReference entityReference1 = solrEntityReferenceResolver0.resolve(solrDocument0, entityType1, (Object[]) null);
      assertNull(entityReference1);
  }
}
