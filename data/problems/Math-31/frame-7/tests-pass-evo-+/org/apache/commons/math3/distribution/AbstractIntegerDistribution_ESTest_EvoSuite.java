/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:32:30 GMT 2020
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.BinomialDistribution;
import org.apache.commons.math3.distribution.HypergeometricDistribution;
import org.apache.commons.math3.distribution.PascalDistribution;
import org.apache.commons.math3.distribution.PoissonDistribution;
import org.apache.commons.math3.distribution.UniformIntegerDistribution;
import org.apache.commons.math3.distribution.ZipfDistribution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

public class AbstractIntegerDistribution_ESTest_EvoSuite extends AbstractIntegerDistribution_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PoissonDistribution poissonDistribution0 = new PoissonDistribution(0.8536160253539704);
      poissonDistribution0.sample();
      poissonDistribution0.normalApproximateProbability(2);
      poissonDistribution0.inverseCumulativeProbability(0.8536160253539704);
      poissonDistribution0.inverseCumulativeProbability(0.8536160253539704);
      poissonDistribution0.sample();
      poissonDistribution0.sample(2);
      UniformIntegerDistribution uniformIntegerDistribution0 = new UniformIntegerDistribution(1, 2);
      uniformIntegerDistribution0.getSupportUpperBound();
      poissonDistribution0.cumulativeProbability(2);
      ZipfDistribution zipfDistribution0 = new ZipfDistribution(1, 1);
      zipfDistribution0.isSupportConnected();
  }

}
