/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:13:27 GMT 2020
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartTheme;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.Timeline;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.WindDataset;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;

public class ChartFactory_ESTest_EvoSuite extends ChartFactory_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("", "", "", (XYDataset) null, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart(")IT+<Ckk;", ")IT+<Ckk;", ")IT+<Ckk;", (XYDataset) null, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Integer integer0 = (Integer)Plot.ZERO;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0, integer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("N*", waferMapDataset0, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.CANADA_FRENCH;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("JFree", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(4874, 0);
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("", dynamicTimeSeriesCollection0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("]", (PieDataset) jDBCPieDataset0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, 0, false, false, false, locale0, false, false);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart(":fqe*8n<|+4F918", (CategoryDataset) null, tableOrder0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart3D("org.jfree.chart.plot.XYPlot", "org.jfree.chart.plot.XYPlot", "WMAP_Plot", defaultMultiValueCategoryDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[1];
      MockDate mockDate0 = new MockDate(3, 3, 3, 0, 3, 2);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, (-2318.53), (-2828.0087598), (-1879.360203198809), (-2828.0087598));
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("U`P94Y{2pi~ID&4?n", oHLCDataItemArray0);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("uVW^0|#zI|)V", "uVW^0|#zI|)V", "U`P94Y{2pi~ID&4?n", (OHLCDataset) defaultOHLCDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(",ps?g(Pf5S", oHLCDataItemArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("3k/^&W(b I", "org.jfree.chart.ChartFactory", ",ps?g(Pf5S", (OHLCDataset) defaultOHLCDataset0, (Timeline) segmentedTimeline0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[5];
      DateAxis dateAxis0 = new DateAxis();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(dateAxis0.DEFAULT_ANCHOR_DATE, 0.0F, 500, 2.0F, 0.0F, (-337.3123));
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItem0;
      oHLCDataItemArray0[2] = oHLCDataItem0;
      oHLCDataItemArray0[3] = oHLCDataItemArray0[2];
      oHLCDataItemArray0[4] = oHLCDataItemArray0[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("", oHLCDataItemArray0);
      Timeline timeline0 = dateAxis0.getTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("e)z_=(a}%^~n*dAiz6", "", "", (OHLCDataset) defaultOHLCDataset0, timeline0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createCandlestickChart("`V31", "", "`V31", (OHLCDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("~r)a^}7yB1");
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("~r)a^}7yB1", ">v)~+t3i 'GLkhW", "~r)a^}7yB1", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("NOID", "", "", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 10);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("x", waferMapDataset0, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Object[][][] objectArray0 = new Object[0][7][8];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("Darkness", "Darkness", "!#", defaultWindDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("D", "|0'NB~]<E^r", "|0'NB~]<E^r", categoryTableXYDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart("pu>f(", "pu>f(", "Compass_Plot", (XYDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart("JFree", (String) null, "JFree", (XYDataset) null, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart(":fqe*8n<|+4F918", "", "", (XYDataset) null, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart(":fqe*8n<|+4F918", "", "", (XYDataset) null, plotOrientation0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("Null 'order' argument.", "", "{T.M\"27+?h`t's^", categoryTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("8 =", "$!e2]=2rOVI", "8 =", (XYDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(34.8058962, "Darkness");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart(",h3", "Darkness", "", timeTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart(":fqe*8n<|+4F918", "green", "Darkness", (XYDataset) null, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("", "", false, "", defaultTableXYDataset0, plotOrientation0, true, true, true);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("=change >=+", "Null 'orientation' argument.", true, "Null 'orientation' argument.", xIntervalSeriesCollection0, plotOrientation0, false, true, false);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("Gf>A.DLz", "s", "Gf>A.DLz", (XYDataset) null, plotOrientation0, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("", "NF%uG:8`^;c7cZ", "", (XYDataset) null, plotOrientation0, true, false, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart("u-UldHAr$0HB", "u-UldHAr$0HB", "u-UldHAr$0HB", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart("jK` @Uks4,pR!XnS0", "F}eee]Bd[R#'*", "L2rGR7&FYyyi/Lr,", taskSeriesCollection0, plotOrientation0, true, true, true);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("KZbohQ/8:", "KO#GPH1b|untTx<6g#", "qa&A", (IntervalCategoryDataset) null, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double[][] doubleArray0 = new double[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("", "org.jfree.chart.plot.XYPlot", "KzM3x#mWSvG<", defaultIntervalCategoryDataset0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("{3} - {4}");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart3D("", "", "", defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("JFree", "<j\"=R^H8egPx", "'paJL=v`'K4{x", (CategoryDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("Darkness", "&[?+:;", "fuZ)z_4^fy", (CategoryDataset) null, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("6X!i.\"Im??/%", "6X!i.\"Im??/%", "Null 'base' argument.", jDBCCategoryDataset0, plotOrientation0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("", "", ">v)~+t3i 'GLkhW", (CategoryDataset) null, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1521.65), (-1521.65));
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, cyclicNumberAxis0, cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("}cO ]&_lfG{}", "}cO ]&_lfG{}", ",", defaultCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, (-4402), 4);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("Null 'theme' argument.", "Null 'theme' argument.", "", slidingCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D("x", "x", "labelVisible", jDBCCategoryDataset0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      PeriodAxis periodAxis0 = new PeriodAxis("{3} - {4}");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D(", tooltip=", "t~/#O9x$eq68jt(zq_", "TVcu` |Knd:X)[,M#", jDBCCategoryDataset0, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createBarChart((String) null, "", "x~Ku%Rz-P_ ", defaultKeyedValues2DDataset0, plotOrientation0, false, false, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 2538, 2538);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("", slidingCategoryDataset0, tableOrder0, false, false, false);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("labelVisible", jDBCCategoryDataset0, tableOrder0, true, false, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("{3} - {4}", jDBCCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("Y^?!*4~}I", (PieDataset) defaultKeyedValuesDataset0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.CHINA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("labelOutlineVisible", (PieDataset) jDBCPieDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ENGLISH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("Legacy", (PieDataset) defaultPieDataset0, true, false, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("6X!i.\"Im??/%", jDBCCategoryDataset0, tableOrder0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("<j\"=R^H8egPx", (CategoryDataset) null, tableOrder0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("Empty list not permitted.", (PieDataset) defaultPieDataset0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(taskSeriesCollection0, tableOrder0, (-3534));
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("z!&rto>D.|[", (PieDataset) categoryToPieDataset0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.FRENCH;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("x", (PieDataset) defaultPieDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = new Locale("x");
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("Darkness", (PieDataset) defaultPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, (-921));
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 0, false, false, false, false, false, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double[][] doubleArray0 = new double[9][2];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-1521.65);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 1172, true, false, true, true, true, true);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 15);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("TVcu` |Knd:X)[,M#", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 15, false, false, true, true, true, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.CANADA;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("ooI5oU;t6DYdvB,", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, 15, true, true, false, locale0, true, true);
      assertEquals(2, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = new Locale("x");
      JFreeChart jFreeChart0 = ChartFactory.createPieChart(",h3", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, 2424, false, true, false, locale0, true, true);
      assertEquals(2, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("{3} - {4}", (PieDataset) defaultPieDataset0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Z~a\rj", (PieDataset) null, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Locale locale0 = Locale.TAIWAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("^JQ9kTBFOT`rCG", (PieDataset) jDBCPieDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ENGLISH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("x", (PieDataset) defaultPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ChartTheme chartTheme0 = StandardChartTheme.createLegacyTheme();
      ChartFactory.setChartTheme(chartTheme0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset("A^eanGmV1S");
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("", "fpd[YU_C2RQgVg`", "Null 'orientation' argument.", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = (StandardChartTheme)ChartFactory.getChartTheme();
      ChartFactory.setChartTheme(standardChartTheme0);
      assertEquals("JFree", standardChartTheme0.getName());
  }

}
