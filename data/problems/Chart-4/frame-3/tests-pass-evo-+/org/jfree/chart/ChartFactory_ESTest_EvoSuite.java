/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:13:32 GMT 2020
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.time.Clock;
import java.time.Instant;
import java.time.ZoneOffset;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartTheme;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.Timeline;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.WindDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYZDataset;
import sun.util.calendar.ZoneInfo;

public class ChartFactory_ESTest_EvoSuite extends ChartFactory_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart((String) null, ",zG%i@+d S{uB+ +|4", "$", (XYDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("org.jfree.chart.block.ColorBlock", "The 'bins' value must be at least 1.", "", (XYDataset) null, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      float[][] floatArray0 = new float[3][2];
      TimeZone timeZone0 = TimeZone.getTimeZone("JFren");
      DateAxis dateAxis0 = new DateAxis("JFree", timeZone0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, dateAxis0, dateAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(10, 344);
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("w0X:Kp}+j<.", waferMapDataset0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ITALY;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeZone0);
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("", timeSeriesCollection0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(taskSeriesCollection0, tableOrder0, 15);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart(":", (PieDataset) categoryToPieDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 61);
      Locale locale0 = Locale.UK;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) categoryToPieDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Null 'order' argument.", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 10, false, false, false, locale0, false, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.tickMinutes(zoneOffset0);
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      dateArray0[0] = date0;
      double[] doubleArray0 = new double[1];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(")Kj2qD $M)=2$K8!#C", dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart(")Kj2qD $M)=2$K8!#C", "", "", (OHLCDataset) defaultHighLowDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("m\"");
      Timeline timeline0 = dateAxis0.getTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("", "", "", (OHLCDataset) null, timeline0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("JFren");
      DateAxis dateAxis0 = new DateAxis("JFree", timeZone0);
      Date[] dateArray0 = new Date[5];
      dateArray0[0] = dateAxis0.DEFAULT_ANCHOR_DATE;
      dateArray0[1] = dateAxis0.DEFAULT_ANCHOR_DATE;
      dateArray0[2] = dateAxis0.DEFAULT_ANCHOR_DATE;
      dateArray0[3] = dateAxis0.DEFAULT_ANCHOR_DATE;
      dateArray0[4] = dateAxis0.DEFAULT_ANCHOR_DATE;
      double[] doubleArray0 = new double[8];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(500, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newMondayThroughFridayTimeline();
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("JFree", (String) null, "JFree", (OHLCDataset) defaultHighLowDataset0, (Timeline) segmentedTimeline0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("Darkness", "PieLabelLinkStyle.STANDARD", "Darkness", taskSeriesCollection0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createCandlestickChart("38bP6y]Ixs", "?n'_(XI", "Darkness", (OHLCDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-1098806052), 1);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("org.jfree.data.DefaultKeyedValue", waferMapDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("", "", "JFree", defaultWindDataset0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("Legacy", "Null 'orientation' argument.", "Null 'orientation' argument.", (WindDataset) null, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("T,/k9y8M?g:P\"wLR;", "", "", (XYZDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("Ed$1qhQFem[gxh7", "Darkness", ".1jCN`2Bo]JV->H[", (XYZDataset) null, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("*mI#k!Y_ gB", "U.N82", "NnnH YX9M>4<o3v?Mj", (XYDataset) null, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("_f^Dfta", "Legacy", "Darkness", (XYDataset) null, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("", "H_5>&YwMs.6C,du", "H_5>&YwMs.6C,du", xYIntervalSeriesCollection0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.JAPAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("+/_Bh}{", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, (-2323), false, true, false, locale0, false, false);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(15, "2");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(simpleTimeZone0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1369, (-2323), 1369, (-2323), 1369, 15, true, true, false, false, true, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      JFreeChart jFreeChart1 = ChartFactory.createXYLineChart("+/_Bh}{", "Darkness", (String) null, timeSeriesCollection0, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart1.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("+", "+", "org.jfree.chart.LegendItem", defaultTableXYDataset0, plotOrientation0, false, true, false);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Font font0 = AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-292.273701765651));
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("$3!$dFu+_U<wCC", font0, meterPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-175), 10, 15, 15, 15, true, true, true, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      JFreeChart jFreeChart1 = ChartFactory.createStackedXYAreaChart("$3!$dFu+_U<wCC", "$3!$dFu+_U<wCC", "$3!$dFu+_U<wCC", (TableXYDataset) null, plotOrientation0, true, false, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("JFree", "Eb7'~ba+1d", "org.jfree.chart.event.PlotChangeEvent", (XYDataset) null, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("$=Y!!`=xM?>D", "Darkness", true, "!HVh", defaultTableXYDataset0, plotOrientation0, true, false, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("1t$~%2a0", (XYDataset) null, false, false, true);
      PolarChartPanel polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
      PlotOrientation plotOrientation0 = polarChartPanel0.getOrientation();
      ChartFactory.createScatterPlot(")", "", ":HU2mH:6E8I(~q3vC", (XYDataset) null, plotOrientation0, true, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("Null 'order' argument.", "s1Z%JjgUm_4x", "Null 'order' argument.", (XYDataset) null, plotOrientation0, false, false, false);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      double[][] doubleArray0 = new double[0][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("Null 'orientation' argument.", "", " (", defaultIntervalCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Too many elements", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 0, false, false, false, false, false, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      JFreeChart jFreeChart1 = ChartFactory.createLineChart("", "ZOOM_IN_DOMAIN", "ZOOM_IN_DOMAIN", defaultIntervalCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart1.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart(",zG%i@+d S{uB+ +|4", ",zG%i@+d S{uB+ +|4", "$", defaultStatisticalCategoryDataset0, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart(" (+100%)", "", " out of bounds.", (CategoryDataset) null, plotOrientation0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double[][] doubleArray0 = new double[9][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart((String) null, "org.jfree.data.time.DynamicTimeSeriesCollection", "org.jfree.data.time.DynamicTimeSeriesCollection", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("%'L_wS]k|c=|;8", ".j?@> @Uw{+'EkhyL.Y", ".j?@> @Uw{+'EkhyL.Y", (CategoryDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart3D("Bog-QCsDU('", "", "Tl.8\"k", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double[][] doubleArray0 = new double[9][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart3D((String) null, (String) null, "Legacy", defaultIntervalCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("", "Zf^L8", "Bog-QCsDU('", defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-3009), (-3009));
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("Darkness", "JFree", "JFree", slidingGanttCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.tickMinutes(zoneOffset0);
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      dateArray0[0] = date0;
      double[] doubleArray0 = new double[1];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(")Kj2qD $M)=2$K8!#C", dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart(")Kj2qD $M)=2$K8!#C", "", "", (OHLCDataset) defaultHighLowDataset0, false);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      ChartFactory.createBarChart("org.jfree.chart.labels.StandardXYToolTipGenerator", "org.jfree.chart.labels.StandardXYToolTipGenerator", "2", defaultMultiValueCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("Hbp~D<5_Irr>16D", jDBCCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart3D("org.jfree.chart.labels.StandardXYToolTipGenerator", defaultMultiValueCategoryDataset0, tableOrder0, false, false, false);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("", (PieDataset) defaultKeyedValuesDataset0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("k#ppuSy%Lc<k+`~Z", (PieDataset) defaultPieDataset0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.FRANCE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("ZOOM_RANGE_BOTH", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ROOT;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart3D("]dEjm|_p!uVP9%i", (PieDataset) defaultPieDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("2", defaultMultiValueCategoryDataset0, tableOrder0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("?dwa>MZ6l:-k>h{", defaultBoxAndWhiskerCategoryDataset0, tableOrder0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("2", defaultMultiValueCategoryDataset0, tableOrder0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) null, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("Legacy", (PieDataset) defaultPieDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultPieDataset0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("5} 8", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 1, false, false, true, false, true, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      jDBCPieDataset0.setValue((Comparable) "zKn@+ei", (Number) integer0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("zKn@+ei", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1081), true, true, true, true, false, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      jDBCPieDataset0.setValue((Comparable) "zKn@+ei", (Number) integer0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("zKn@+ei", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1081), false, false, false, false, false, true);
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      jDBCPieDataset0.setValue((Comparable) "zKn@+ei", (Number) integer0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("zKn@+ei", (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-1081), true, true, true, true, false, true);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart((String) null, (PieDataset) jDBCPieDataset0, (PieDataset) jDBCPieDataset0, (-887), true, true, true, true, true, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 10);
      Locale locale0 = Locale.GERMANY;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("o", (PieDataset) categoryToPieDataset0, (PieDataset) categoryToPieDataset0, 10, false, false, true, locale0, true, false);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ENGLISH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("org.jfree.data.time.DynamicTimeSeriesCollection", (PieDataset) defaultPieDataset0, (PieDataset) defaultPieDataset0, 15, true, true, false, locale0, true, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("N", (PieDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      Locale locale0 = Locale.ENGLISH;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("", (PieDataset) defaultPieDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Tbgx2hN1E}c", (PieDataset) null, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ChartTheme chartTheme0 = StandardChartTheme.createLegacyTheme();
      ChartFactory.setChartTheme(chartTheme0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = (StandardChartTheme)StandardChartTheme.createJFreeTheme();
      ChartFactory.setChartTheme(standardChartTheme0);
      assertTrue(standardChartTheme0.isShadowVisible());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("d'\"O[(:R#mN34", "?dwa>MZ6l:-k>h{", "?dwa>MZ6l:-k>h{", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = (StandardChartTheme)ChartFactory.getChartTheme();
      assertEquals("JFree", standardChartTheme0.getName());
  }

}
