/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 24 16:38:44 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.function.Cbrt;
import org.apache.commons.math.analysis.function.Expm1;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

public class BracketingNthOrderBrentSolver_ESTest_EvoSuite extends BracketingNthOrderBrentSolver_ESTest_scaffolding_EvoSuite {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2446.4), (-2446.4), 10.0, 3);
      Gaussian gaussian0 = new Gaussian(3, 3, 10.0);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      bracketingNthOrderBrentSolver0.solve(1202, (UnivariateFunction) gaussian0, (-2446.4), 816.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1945.6728), 7.012806239173502E291, (-1470.84), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-553.822628), 490);
      Identity identity0 = new Identity();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      bracketingNthOrderBrentSolver0.solve(490, (UnivariateFunction) identity0, (-1.2030229087793677E-8), 1417.88, allowedSolution0);
      bracketingNthOrderBrentSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1470.2511428237547), 512.8441, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1945.6728), 7.012806239173502E291, (-1470.2511428237547), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Expm1 expm1_0 = new Expm1();
      bracketingNthOrderBrentSolver0.solve(378, (UnivariateFunction) expm1_0, (-162.004623086), (double) 378, (-109.1970313213805));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1924.9834660739182), 7.012806239173502E291, (-1470.2511428237547), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1945.6728), 7.012806239173502E291, (double) 1307, allowedSolution0);
      assertEquals(1307.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(4.547473508864641E-13, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = bracketingNthOrderBrentSolver0.solve(1307, (UnivariateFunction) cbrt0, (-1945.6728), 7.012806239173502E291, (-1470.2511428237547), allowedSolution0);
      assertEquals((-1470.2511428237547), bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals((-2.2737367544323206E-13), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      Expm1 expm1_0 = new Expm1();
      double double0 = bracketingNthOrderBrentSolver0.solve(375, (UnivariateFunction) expm1_0, (-162.004623086), (double) 375, (-109.1970313213805));
      assertEquals((-6.564505341220828E-21), double0, 0.01);
      
      double double1 = bracketingNthOrderBrentSolver0.doSolve();
      assertEquals((-6.564505341220828E-21), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2446.4), (-2446.4), 10.0, 3);
      Gaussian gaussian0 = new Gaussian(3, 3, 10.0);
      UnivariateFunction univariateFunction0 = gaussian0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = bracketingNthOrderBrentSolver0.solve(3, univariateFunction0, 0.0, (double) 3, allowedSolution0);
      assertEquals(3.0, double0, 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(3, bracketingNthOrderBrentSolver0.getMaximalOrder());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2446.4), (-2446.4), 10.0, 32);
      Gaussian gaussian0 = new Gaussian(32, 32, 10.0);
      UnivariateFunction univariateFunction0 = gaussian0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = bracketingNthOrderBrentSolver0.solve(1202, univariateFunction0, 0.0, 816.0, allowedSolution0);
      assertEquals(32, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2446.4), (-2446.4), 10.0, 3);
      Gaussian gaussian0 = new Gaussian(3, 3, 10.0);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      bracketingNthOrderBrentSolver0.solve(1202, (UnivariateFunction) gaussian0, 0.0, 816.0, allowedSolution0);
      double double0 = bracketingNthOrderBrentSolver0.doSolve();
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(408.0, double0, 0.01);
      assertEquals(3, bracketingNthOrderBrentSolver0.getMaximalOrder());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-1658.558), 6.283185307179586, 31);
      int int0 = bracketingNthOrderBrentSolver0.getMaximalOrder();
      assertEquals(31, int0);
  }
}
